//  Fonts ––––––––––––––––––––––––––––––––––––––––––––––––

$base-font-size: 16px;

// Sans serif --------------------------------------------

$font-sans-regular-fallback: "Verdana", "Helvetica", "Arial";

$font-sans-regular: "Gotham A", "Gotham B", "Open Sans Regular", $font-sans-regular-fallback;

$font-serif-regular-fallback: "Georgia", Times, sans-serif;

$font-serif-regular: "Sentinel SSm A", "Sentinel SSm B", $font-serif-regular-fallback;

$font-monospace-regular: "Monaco", "Courier", monospace;

@mixin font-sans-regular {
    font-family: $font-sans-regular;
    font-weight: 400;
    font-style: normal;
    }

@mixin font-sans-bold {
    font-family: $font-sans-regular;
    font-weight: 700;
    font-style: normal;
    }

// Serif -------------------------------------------------

@mixin font-serif-bold {
    font-family: $font-serif-regular;
    font-weight: 600;
    font-style: normal;
    letter-spacing: -0.5px;
    }

// Converts px to rems. Via David Ensinger: http://davidensinger.com/2013/03/using-rems-with-sass/

@mixin rem($property, $values) {
  // Create a couple of empty lists as output buffers.
  $font-size: $base-font-size;
  $px-values: ();
  $rem-values: ();

  // Loop through the $values list
  @each $value in $values {
    // For each property value, if it's in rem or px, derive both rem and
    // px values for it and add those to the end of the appropriate buffer.
    // Ensure all pixel values are rounded to the nearest pixel.
    @if $value == 0 or $value == 0px {
      // 0 -- use it without a unit
      $px-values: join($px-values, 0);
      $rem-values: join($rem-values, 0);
    } @else if type-of($value) == number and not unitless($value) and (unit($value) == px) {
      // px value given - calculate rem value from font-size
      $new-rem-value: $value / $font-size;
      $px-values: join($px-values, round($value));
      $rem-values: join($rem-values, #{$new-rem-value}rem);
    } @else if type-of($value) == number and not unitless($value) and (unit($value) == "%") {
      // % value given - don't add px or rem
      $px-values: join($px-values, #{$value});
      $rem-values: join($rem-values, #{$value});
    } @else if $value == auto {
      // auto - don't add px or rem
      $px-values: join($px-values, auto);
      $rem-values: join($rem-values, auto);
    } @else {
      // unitless value - use those directly as rem and calculate the px-fallback
      $px-values: join($px-values, round($value * $font-size));
      $rem-values: join($rem-values, #{$value}rem);
    }
  }
  // output the converted rules
  #{$property}: $px-values;
  #{$property}: $rem-values;
}